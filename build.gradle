import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2" }
        maven { url "https://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"

        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot2_version"
        classpath "io.franzbecker:gradle-lombok:2.2"
    }
}

allprojects {
    group = 'cc.before30.home'
    version = "$homExVersion" + "$snapshotVersion"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://repo.spring.io/libs-snapshot'
        }
    }

    // For refresh snapshot jar
//    configurations.all {
//        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'idea'
    apply plugin: 'jacoco'


    test {
        useJUnitPlatform()

        maxParallelForks = Runtime.getRuntime().availableProcessors()
        forkEvery = 1

        testLogging {
            events 'FAILED'
        }

        ignoreFailures true
        // maxParallelForks 4
        // set heap size for the test JVM(s)
        minHeapSize = "1G"
        maxHeapSize = "4G"
        jvmArgs "-XX:ReservedCodeCacheSize=2g"
    }

    dependencyManagement {

        dependencies {
            // Kotlin
            dependency "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
            dependency "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"

            // kotlinx-coroutines
            dependency "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            dependency "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"
            dependency "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutines_version"
            dependency "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$coroutines_version"


            // Apache Commons
            dependency "org.apache.commons:commons-lang3:3.8.1"
            dependency 'commons-codec:commons-codec:1.12'

            dependency "org.redisson:redisson:3.10.6"

            // FailSafe (CircuitBraker, Retry)
            dependency "net.jodah:failsafe:2.0.1"

            // Http
            dependency "com.squareup.okhttp3:okhttp:3.13.1"

            // Logging
            dependency "org.slf4j:slf4j-api:1.7.25"
            dependency "org.slf4j:jul-to-slf4j:1.7.25"
            dependency "org.slf4j:jcl-over-slf4j:1.7.25"
            dependency "org.slf4j:log4j-over-slf4j:1.7.25"
            dependency "ch.qos.logback:logback-classic:1.2.3"

            dependency "com.esotericsoftware:reflectasm:1.11.8"

            dependency "io.reactivex.rxjava2:rxjava:2.2.6"

            dependency "javax.validation:validation-api:2.0.1.Final"
            dependency "org.hibernate.validator:hibernate-validator:6.0.16.Final"
            dependency "org.glassfish:javax.el:3.0.1-b11"

            dependency "com.google.code.findbugs:jsr305:3.0.2"
            dependency "org.projectlombok:lombok:1.18.6"

            dependency "com.fasterxml.jackson.core:jackson-core:$jackson_version"
            dependency "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
            dependency "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformats-binary:$jackson_version"
            dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-avro:$jackson_version"

            // support joda-time
            dependency "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
            dependency "com.fasterxml.jackson.module:jackson-datatypes-collections:$jackson_version"
            // support jdk 8
            dependency "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version"
            dependency "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version"
            dependency "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
            dependency "com.fasterxml.jackson.datatype:jackson-datatype-pcollections:$jackson_version"

            dependency "com.fasterxml.jackson.module:jackson-modules-base:$jackson_version"
            dependency "com.fasterxml.jackson.module:jackson-module-afterburner:$jackson_version"
            dependency "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
            dependency "com.fasterxml.jackson.module:jackson-module-scala_2.11:$jackson_version"

        }
    }

    dependencies {
        compile "org.apache.commons:commons-lang3"

        compileOnly "javax.validation:validation-api"
        testCompileOnly "javax.validation:validation-api"

        compileOnly "com.google.code.findbugs:jsr305"
        testCompileOnly "com.google.code.findbugs:jsr305"

        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"

        implementation "org.slf4j:slf4j-api"
        testImplementation "ch.qos.logback:logback-classic"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"

        testImplementation "org.assertj:assertj-core:3.11.1"
        testImplementation "org.amshove.kluent:kluent:1.45"

        testImplementation "org.mockito:mockito-core:2.23.4"
        testImplementation "org.mockito:mockito-junit-jupiter:2.23.4"
    }

}